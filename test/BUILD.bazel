load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")

cc_library(
    name = "utility",
    hdrs = ["utility.hpp"],
    include_prefix = "test",
    deps = [
        "//:constrained_value",
        "@boost_ut",
    ],
)

cc_test(
    name = "assignable",
    size = "small",
    srcs = ["assignable_test.cpp"],
    deps = [
        "//:constrained_value",
        "@boost_ut",
    ],
)

cc_test(
    name = "constructible",
    size = "small",
    srcs = ["constructible_test.cpp"],
    deps = [
        "//:constrained_value",
        "@boost_ut",
    ],
)

cc_test(
    name = "convertible",
    size = "small",
    srcs = ["convertible_test.cpp"],
    deps = [
        "//:constrained_value",
        "@boost_ut",
    ],
)

cc_test(
    name = "multiple_predicates",
    size = "small",
    srcs = ["multiple_predicates_test.cpp"],
    deps = [
        "//:constrained_value",
        "@boost_ut",
    ],
)

cc_test(
    name = "violation_policy",
    size = "small",
    srcs = ["violation_policy_test.cpp"],
    deps = [
        "//:constrained_value",
        "@boost_ut",
    ],
)

cc_test(
    name = "total_order_constrained_values",
    size = "small",
    srcs = ["total_order_constrained_values_test.cpp"],
    deps = [":utility"],
)

cc_test(
    name = "near_constrained_value",
    size = "small",
    srcs = ["near_constrained_value_test.cpp"],
    deps = [":utility"],
)

cc_test(
    name = "unit_constrained_value",
    size = "small",
    srcs = ["unit_constrained_value_test.cpp"],
    deps = [":utility"],
)

cc_test(
    name = "ulp",
    size = "small",
    srcs = ["ulp_test.cpp"],
    deps = [
        "//:constrained_value",
        "@boost_ut",
    ],
)
